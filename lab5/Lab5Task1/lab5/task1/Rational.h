#pragma once
#include <sstream>
#include <cmath>


/*
Класс, моделирующий рациональное число
*/
class CRational final
{
public:
	CRational(int numerator = 0, int denominator = 1);

	// Возвращает числитель
	int GetNumerator() const;

	// Возвращает знаменатель
	int GetDenominator() const;

	// TODO: 1. Реализовать метод ToDouble() согласно заданию
	double ToDouble() const ;
	//////////////////////////////////////////////////////////////////////////

		


	//////////////////////////////////////////////////////////////////////////
	// TODO: 2. Реализовать унарный + и унарный -
	CRational const operator-()const;
	CRational const operator+()const;
	//////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////
	// TODO: 5. Реализовать оператор +=
	CRational& operator+=(CRational const& value);
	//////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////
	// TODO: 6. Реализовать оператор -=
	CRational& operator-=(CRational const& value);
	//////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////
	// TODO: 9. Реализовать оператор *=
	CRational &operator *=(CRational const &value);
	//////////////////////////////////////////////////////////////////////////


	//////////////////////////////////////////////////////////////////////////
	// TODO: 10. Реализовать оператор /=
	CRational &operator /=(CRational const &value);
	//////////////////////////////////////////////////////////////////////////

private:
	int m_numerator;
	int m_denominator;

	// Нормализует рациональное число
	void Normalize();
};

// Вычисляет наибольший общий знаменатель чисел a и b
unsigned GCD(unsigned a, unsigned b);

//////////////////////////////////////////////////////////////////////////
// TODO: 3. Реализовать бинарный +
CRational const operator +(CRational const &rational1, CRational const &rational2);
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// TODO: 4. Реализовать бинарный -
CRational const operator -(CRational const &rational1, CRational const &rational2);
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// TODO: 11. Реализовать операторы == и !=
bool operator == (CRational const & rational1, CRational const & rational2) ;
bool operator != (CRational const & rational1, CRational const & rational2) ;
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// TODO: 7. Реализовать оператор *
CRational const operator*(CRational const & rational1, CRational const & rational2);
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// TODO: 8. Реализовать оператор /
CRational const operator/(CRational const & rational1, CRational const & rational2);
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// TODO: 12. Реализовать операторы <, >, <=, >=
bool const operator <(CRational const &rational1, CRational const &rational2);

bool const operator >(CRational const &rational1, CRational const &rational2);

bool const operator <=(CRational const &rational1, CRational const &rational2);

bool const operator >=(CRational const &rational1, CRational const &rational2);
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// TODO: 13. Реализовать оператор вывода рационального числа в выходной поток 
std::ostream & operator<<(std::ostream & stream, CRational const & rational);
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// TODO: 14. Реализовать оператор ввода рационального числа из входного потока 
std::istream & operator>>(std::istream & stream, CRational & rational);
//////////////////////////////////////////////////////////////////////////